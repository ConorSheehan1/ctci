# cheat using python lists# create list of lists# head of stack is end of listclass SetOfStacks:	def __init__(self, max_size=5):		self.max_size = max_size		self.stacks = [[]]	def push(self, val):		if len(self.stacks[len(self.stacks)-1]) < self.max_size:			self.stacks[len(self.stacks)-1].append(val)		# make a new stack		else:			self.stacks.append([val])	def pop(self):		try:			to_return = self.stacks[len(self.stacks)-1].pop()			# if top stack is now empty, remove stack			if not self.stacks[len(self.stacks)-1]:				self.stacks.pop()			return to_return		except IndexError:			return "cant pop an empty stack"	def pop_at_index(self, index):		try:			to_return = self.stacks[index].pop()			# if stack at index is now empty, remove it			if not self.stacks[index]:				self.stacks.pop(index)			return to_return		except IndexError:			return "index out of range"	def __repr__(self):		return str(self.stacks)	def __iter__(self):		for stack in self.stacks:			for val in stack:				yield vals = SetOfStacks()for i in range(20):	s.push(i)print(s)# should pop all elems and then throw one error# for i in range(21):# 	print(s.pop())# should pop all elems in first stack and then one from secondfor i in range(6):	print(s.pop_at_index(0), s)